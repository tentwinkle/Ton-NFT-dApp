;; Storage
;;
;; int32 seqno
;; int256 public_key
;; cell children_contracts

#pragma version >=0.4.0;
#include "../lib/func/stdlib.fc";

const int user_mint_request = 1;
const int batch_user_mint_request = 2;

(cell) calculate_msg_body_for_deploy_request (int item_index) inline {
    return (
        begin_cell()
            .store_uint(user_mint_request, 64) ;; op
            .store_uint(item_index, )
        .end_cell()
    );
}

return_

() send_deploy_request (slice collection_addr) impure {

    cell msg_body = (
        begin_cell()
            .store_uint(user_mint_request, 64)
            .
    )

    send_raw_message(msg, mode);

}

() main () impure {

}

() recv_external (int my_balance, int msg_value, cell in_msg_full, slice in_msg_body, int function_selector) impure {

    var signature = in_msg_body~load_bits(512);
    var cs = in_msg_body;

    var msg_segno = cs~load_uint(32);

    slice ds = get_data().begin_parse();

    int stored_seqno = ds~load_uint(32);
    int public_key = ds~load_uint(256);

    throw_unless(33, msg_segno == stored_seqno);
    throw_unless(35, check_signature(slice_hash(in_msg_body), signature, public_key));

    accept_message();

    ;; we need to load everything from ds here

    int op = in_msg_body~load_uint(32);
    int collection_id = in_msg_body~load_uint(32);

    if (op == mint_nft_request) {

        if (collection_id == users_collection) {

            request_nft_deploy(item_index, deploy_amount, nft_content);

        }

        if (collection_id == admins_collection) {

            request_nft_deploy(item_index, deploy_amount, nft_content);
            
        }

        if (collection_id == drivers_collection) {

            request_nft_deploy(item_index, deploy_amount, nft_content);
            
        }

        if (collection_id == orders_collection) {

            request_nft_deploy(item_index, deploy_amount, nft_content);
            
        }

    }

    if (op == edit_nft_request) {

        if (collection_id == users_collection) {

            request_nft_edit(item_index, deploy_amount, nft_content);

        }

        if (collection_id == admins_collection) {

            request_nft_edit(item_index, deploy_amount, nft_content);
            
        }

        if (collection_id == drivers_collection) {

            request_nft_edit(item_index, deploy_amount, nft_content);
            
        }

        if (collection_id == orders_collection) {

            request_nft_edit(item_index, deploy_amount, nft_content);
            
        }

}